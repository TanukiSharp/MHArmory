<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:local="clr-namespace:MHArmory"
                    xmlns:ctrl="clr-namespace:MHArmory.Core.WPF.Controls;assembly=MHArmory.Core.WPF"
                    xmlns:bhv="clr-namespace:MHArmory.Core.WPF.Behaviors;assembly=MHArmory.Core.WPF">

    <Style x:Key="ThickResultBorderStyle" TargetType="Border">
        <Setter Property="CornerRadius" Value="2"/>
        <Setter Property="BorderThickness" Value="2"/>
        <Setter Property="BorderBrush" Value="#300077aa"/>
        <Setter Property="Background" Value="#100077aa"/>
        <Setter Property="Margin" Value="2 2 2 24"/>
        <Setter Property="Padding" Value="2"/>
    </Style>

    <Style x:Key="SelectedThickResultBorderStyle" TargetType="Border" BasedOn="{StaticResource ThickResultBorderStyle}">
        <Setter Property="BorderBrush" Value="Goldenrod"/>
        <Setter Property="Background" Value="PaleGoldenrod"/>
    </Style>

    <Style x:Key="ThinResultBorderStyle" TargetType="Border">
        <Setter Property="CornerRadius" Value="2"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="BorderBrush" Value="#30000000"/>
        <Setter Property="Background" Value="#10000000"/>
        <Setter Property="Margin" Value="16 2 2 2"/>
        <Setter Property="Padding" Value="4"/>
    </Style>

    <Style x:Key="SeamlessButtonStyle" TargetType="{x:Type Button}">
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="BorderBrush" Value="Transparent"/>
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="HorizontalContentAlignment" Value="Stretch"/>
        <Setter Property="VerticalContentAlignment" Value="Stretch"/>
        <Setter Property="Padding" Value="0"/>
        <Setter Property="Margin" Value="0"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="SeamlessToggleButtonStyle" TargetType="{x:Type ToggleButton}">
  		<Setter Property="Background" Value="Transparent"/>
  		<Setter Property="BorderBrush" Value="Transparent"/>
  		<Setter Property="BorderThickness" Value="0"/>
  		<Setter Property="HorizontalContentAlignment" Value="Stretch"/>
  		<Setter Property="VerticalContentAlignment" Value="Stretch"/>
  		<Setter Property="Padding" Value="0"/>
        <Setter Property="IsChecked" Value="{Binding IsSelected, Mode=TwoWay, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=ListBoxItem}}"/>
        <Setter Property="Template">
  			<Setter.Value>
  				<ControlTemplate TargetType="{x:Type ToggleButton}">
  					<ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
  				</ControlTemplate>
  			</Setter.Value>
  		</Setter>
  	</Style>

    <Style x:Key="CustomVerticalScrollViewerStyle" TargetType="ScrollViewer">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ScrollViewer">
                    <DockPanel LastChildFill="True">
                        <ScrollBar DockPanel.Dock="Right" Orientation="Vertical" HorizontalAlignment="Right" IsEnabled="False" Minimum="0" Maximum="{TemplateBinding ScrollViewer.ScrollableHeight}" Value="{TemplateBinding ScrollViewer.VerticalOffset}" ViewportSize="{TemplateBinding ScrollViewer.ViewportHeight}" Name="PART_VerticalScrollBar" Visibility="Visible"/>
                        <ScrollContentPresenter CanContentScroll="True" Content="{TemplateBinding ScrollViewer.Content}"/>
                    </DockPanel>
                    <ControlTemplate.Triggers>
                        <Trigger Property="VerticalScrollBarVisibility" Value="Visible">
                            <Setter TargetName="PART_VerticalScrollBar" Property="IsEnabled" Value="True"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="ctrl:CustomTreeView">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="TreeView">
                    <Border BorderThickness="{TemplateBinding Margin}" SnapsToDevicePixels="True">
                        <ItemsPresenter/>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="TreeViewItem">
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="HorizontalContentAlignment" Value="{Binding Path=HorizontalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}" />
        <Setter Property="VerticalContentAlignment" Value="{Binding Path=VerticalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="TreeViewItem">
                    <StackPanel Orientation="Horizontal">
                        <ContentPresenter x:Name="PART_Header" ContentSource="Header" VerticalAlignment="Top"/>
                        <ItemsPresenter x:Name="ItemsHost" VerticalAlignment="Stretch"/>
                    </StackPanel>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="TextBox">
        <Setter Property="bhv:GreekLetterInputBehavior.IsAttached" Value="True"/>
    </Style>

    <Style x:Key="ComboBoxItemSlotStyle" TargetType="FrameworkElement">
        <Setter Property="Width" Value="16"/>
        <Setter Property="Height" Value="16"/>
    </Style>

    <Style x:Key="ElementImageStyle" TargetType="Image">
        <Setter Property="Width" Value="16"/>
        <Setter Property="Height" Value="16"/>
    </Style>

    <Style x:Key="sep" TargetType="Rectangle">
        <Setter Property="Width" Value="1"/>
        <Setter Property="Fill" Value="LightGray"/>
        <Setter Property="Margin" Value="16 4 16 4"/>
        <Setter Property="SnapsToDevicePixels" Value="True"/>
    </Style>

    <Style x:Key="NoSelectionItemContainerStyle" TargetType="{x:Type ListBoxItem}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ListBoxItem}">
                    <Border Name="root" Padding="2" SnapsToDevicePixels="True" Focusable="False">
                        <ContentPresenter HorizontalAlignment="Stretch" Focusable="False"/>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="Focusable" Value="False"/>
    </Style>

</ResourceDictionary>
